const express = require("express");
const app = express();
const PORT = 3000;

app.use(express.json()); // For parsing application/json

// Mock data of books
const books = [
  { isbn: "978-3-16-148410-0", title: "Book One", author: "Author One", reviews: [] },
  { isbn: "978-1-23-456789-7", title: "Book Two", author: "Author Two", reviews: [] },
];

// Task 10: Get all books using an async callback function
const getAllBooks = (callback) => {
  setTimeout(() => {
    callback(null, books); // Simulate asynchronous behavior
  }, 1000); // Simulate delay
};

app.get("/books", (req, res) => {
  getAllBooks((err, result) => {
    if (err) {
      res.status(500).json({ message: "Error retrieving books" });
    } else {
      res.json(result);
    }
  });
});

// Task 11: Search by ISBN â€“ Using Promises
const searchByIsbn = (isbn) => {
  return new Promise((resolve, reject) => {
    const book = books.find(b => b.isbn === isbn);
    if (book) {
      resolve(book); // If found, return the book
    } else {
      reject({ message: "Book not found" }); // If not found, reject the promise
    }
  });
};

app.get("/books/isbn/:isbn", (req, res) => {
  const { isbn } = req.params;
  
  searchByIsbn(isbn)
    .then((book) => {
      res.json(book);
    })
    .catch((err) => {
      res.status(404).json(err);
    });
});

// Task 12: Search by Author
const searchByAuthor = (author) => {
  return books.filter(b => b.author.toLowerCase() === author.toLowerCase());
};

app.get("/books/author/:author", (req, res) => {
  const { author } = req.params;
  const authorBooks = searchByAuthor(author);
  
  if (authorBooks.length > 0) {
    res.json(authorBooks);
  } else {
    res.status(404).json({ message: "No books found by this author" });
  }
});

// Task 13: Search by Title
const searchByTitle = (title) => {
  return books.filter(b => b.title.toLowerCase().includes(title.toLowerCase()));
};

app.get("/books/title/:title", (req, res) => {
  const { title } = req.params;
  const titleBooks = searchByTitle(title);
  
  if (titleBooks.length > 0) {
    res.json(titleBooks);
  } else {
    res.status(404).json({ message: "No books found with this title" });
  }
});

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
